FROM python:3.11-alpine AS builder

ENV POETRY_VERSION=2.1.4
ENV POETRY_VIRTUALENVS_CREATE=false

WORKDIR /app

# Install build dependencies only in builder
RUN apk add --no-cache --virtual .build-deps \
      build-base curl && \
    curl -sSL https://install.python-poetry.org | python3 - && \
    apk del curl && \
    rm -rf /var/cache/apk/*

# Copy dependency files and install
COPY pyproject.toml poetry.lock ./
RUN poetry install --without dev --no-interaction --no-root

# Copy application code
COPY ./app ./app

FROM python:3.11-alpine

ARG BUILD_DATE
ARG BUILD_REF=0.1.2

ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Create non-root user
RUN addgroup -g 1000 -S noura && \
    adduser -u 1000 -h /app -G noura -S noura

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="your-api" \
      org.opencontainers.image.authors="Your Name <name@yourcompany.com>" \
      org.opencontainers.image.source="https://github.com/yourcompany/your-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Your Company"

WORKDIR /app

# Copy only installed dependencies and app (no Poetry, no build tools)
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /app/app ./app

USER noura

EXPOSE 8000

# Command to run app
CMD ["python3", "app/main.py"]
